---
kind: pipeline
type: docker
name: build

platform:
  os: linux
  arch: amd64

steps:
- name: runner identification
  image: alpine
  commands:
  - echo $DRONE_RUNNER_NAME

- name: deps
  image: golang:1.17
  commands:
  - make deps
  - ./scripts/enforce-clean
  depends_on:
  - runner identification

- name: lint
  image: golang:1.17
  commands:
  - make lint
  depends_on:
  - deps

- name: test
  image: golang:1.17
  commands:
  - make test
  depends_on:
  - lint

- name: build
  image: golang:1.17
  commands:
  - git fetch origin --tags
  - git status --porcelain --untracked-files=no
  - git diff --no-ext-diff --quiet
  - ./scripts/version
  - "{ echo -n latest, ; ./scripts/version ; } > .tags"
  - make build
  depends_on:
  - deps

- name: docker build
  image: plugins/docker
  settings:
    dry_run: true
    repo: grafana/synthetic-monitoring-agent
  environment:
    DOCKER_BUILDKIT: 1
  depends_on:
  - build

- name: docker push to docker.com
  image: plugins/docker
  settings:
    password:
      from_secret: docker_password
    repo: grafana/synthetic-monitoring-agent
    username:
      from_secret: docker_username
  when:
    ref:
    - refs/tags/v*.*.*
  depends_on:
  - test
  - docker build

- name: docker push to gcr.io (dev)
  image: plugins/docker
  settings:
    config:
      from_secret: docker_config_json
    repo: us.gcr.io/kubernetes-dev/synthetic-monitoring-agent
  when:
    ref:
    - refs/heads/main
  depends_on:
  - test
  - docker build

- name: docker push to gcr.io (release)
  image: plugins/docker
  settings:
    config:
      from_secret: docker_config_json
    repo: us.gcr.io/kubernetes-dev/synthetic-monitoring-agent
  when:
    ref:
    - refs/tags/v*.*.*
  depends_on:
  - test
  - docker build

- name: package
  image: golang:1.17
  commands:
  - make package
  when:
    event:
    - pull_request
  depends_on:
  - test
  - docker build

- name: publish packages
  image: golang:1.17
  commands:
  - export GCS_KEY_DIR=$(pwd)/keys
  - mkdir -p $GCS_KEY_DIR
  - echo "$GCS_KEY" | base64 -d > $GCS_KEY_DIR/gcs-key.json
  - make publish-packages
  environment:
    GCS_KEY:
      from_secret: gcs_key
    GPG_PRIV_KEY:
      from_secret: gpg_priv_key
    PUBLISH_PROD_PKGS: 1
  when:
    ref:
    - refs/tags/v*.*.*
  depends_on:
  - package

- name: trigger argo workflow (dev)
  image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
  settings:
    add_ci_labels: true
    command: "submit --from workflowtemplate/deploy-synthetic-monitoring-agent --name deploy-synthetic-monitoring-agent-$(./scripts/version) --parameter mode=dev --parameter dockertag=$(./scripts/version) --parameter commit=${DRONE_COMMIT} --parameter commit_author=${DRONE_COMMIT_AUTHOR} --parameter commit_link=${DRONE_COMMIT_LINK} "
    namespace: synthetic-monitoring-cd
    token:
      from_secret: argo_token
  when:
    ref:
    - refs/heads/main
  depends_on:
  - docker push to gcr.io (dev)

- name: trigger argo workflow (release)
  image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
  settings:
    add_ci_labels: true
    command: "submit --from workflowtemplate/deploy-synthetic-monitoring-agent --name deploy-synthetic-monitoring-agent-$(./scripts/version) --parameter mode=release --parameter dockertag=$(./scripts/version) --parameter commit=${DRONE_COMMIT} --parameter commit_author=${DRONE_COMMIT_AUTHOR} --parameter commit_link=${DRONE_COMMIT_LINK} "
    namespace: synthetic-monitoring-cd
    token:
      from_secret: argo_token
  when:
    ref:
    - refs/tags/v*.*.*
  depends_on:
  - docker push to gcr.io (release)

image_pull_secrets:
- docker_config_json

trigger:
  ref:
  - refs/heads/main
  - refs/pull/**
  - refs/tags/v*.*.*

---
kind: secret
name: docker_username

get:
  path: infra/data/ci/docker_hub
  name: username

---
kind: secret
name: docker_password

get:
  path: infra/data/ci/docker_hub
  name: password

---
kind: secret
name: gcs_key

get:
  path: infra/data/ci/gcp/synthetic-mon-publish-pkgs
  name: key

---
kind: secret
name: gpg_priv_key

get:
  path: infra/data/ci/gcp/synthetic-mon-publish-pkgs
  name: gpg_priv_key

---
kind: secret
name: docker_config_json

get:
  path: infra/data/ci/gcr-admin
  name: .dockerconfigjson

---
kind: secret
name: argo_token

get:
  path: infra/data/ci/argo-workflows/trigger-service-account
  name: token

---
kind: signature
hmac: 40798b1ad1a705e2f4026f29e7a752ecef29ba4b44acea2ef726608be090ce09

...
